{"version":3,"sourceRoot":"","sources":["base/_reset.scss","utils/_container.scss","utils/_appearence.scss","utils/_color-utils.scss","abstracts/_colors.scss","utils/_layout-utils.scss","utils/_text-utils.scss","utils/_typography-utils.scss","abstracts/_typography.scss","base/_font-face.scss","base/_root.scss","abstracts/_mixins.scss","base/_general.scss","pages/_portfolio.scss","pages/_project-view.scss","components/_buttons.scss","components/_form.scss","components/_list.scss","components/_nav.scss","components/_headings.scss","layout/_header.scss","layout/_footer.scss","layout/_main.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["// Based on https://piccalil.li/blog/a-modern-css-reset\r\n\r\n/* box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure {\r\n  margin: 0;\r\n}\r\n\r\n\r\n/* remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul[role='list'],\r\nol[role='list'] {\r\n  list-style: none;\r\n}\r\n\r\n\r\n/* set core root defaults */\r\nhtml {\r\n    height: 100%;\r\n\r\n    &:focus-visible {\r\n        scroll-behavior: smooth;\r\n    }\r\n}\r\n\r\n\r\n/* set core body defaults */\r\nbody {\r\n  height: 100%;\r\n  text-rendering: optimizeSpeed;\r\n}\r\n\r\n\r\n/* reset default link styles */\r\na {\r\n  text-decoration: auto;\r\n  color: inherit;\r\n}\r\n\r\n\r\n/* make images easier to work with  */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n\r\n/* inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n\r\n/* remove default heading styles */\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font: inherit;\r\n}\r\n\r\n\r\n/* larger line height for paragraphs */\r\np {\r\n  line-height: 1.5;\r\n}","@use \"../abstracts/\" as *;\r\n@use \"sass:math\";\r\n\r\n/* container */\r\n$container-max-width: 100ch;\r\n$container-padding-inline: 2rem;\r\n\r\n$breakout-max-width: 120ch;\r\n$breakout-size: math.div(($breakout-max-width - $container-max-width), 2);\r\n\r\n\r\n.container {\r\n    width: min(90%, $container-max-width);\r\n    padding-inline: $container-padding-inline;\r\n    margin-inline: auto;\r\n}\r\n\r\n\r\n.container-grid {\r\n    display: grid;\r\n    grid-template-columns: \r\n    [full-width-start] minmax($container-padding-inline, 1fr)\r\n    [breakout-start]   minmax(0, $breakout-size) \r\n    [content-start]    min(100% - ($container-padding-inline * 2), $container-max-width) \r\n    [content-end]      minmax(0, $breakout-size) \r\n    [breakout-end]     minmax($container-padding-inline, 1fr)\r\n    [full-width-end];\r\n \r\n    > * {\r\n        grid-column: content;\r\n    }\r\n}\r\n\r\n\r\n.full-width {\r\n    grid-column: full-width;\r\n}\r\n\r\n\r\n.breakout {\r\n    grid-column: breakout;\r\n}\r\n\r\n","\r\n/* appearence utilities */\r\n.none {\r\n    display: none;\r\n}\r\n\r\n\r\n.hidden {\r\n    visibility: hidden;\r\n}\r\n\r\n\r\n.visually-hidden {\r\n    clip: rect(0 0 0 0);\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* color utilities */\r\n.clr-accent {\r\n    color: $clr-accent;\r\n}\r\n\r\n.clr-error {\r\n    color: $clr-error;\r\n}","$colors: (\r\n    primary: (\r\n        800: hsl(205, 41%, 21%),\r\n        700: hsl(245, 10%, 22%),\r\n        500: hsl(167, 36%, 54%)\r\n    ),\r\n\r\n    secondary: (\r\n        600: hsl(247, 5%, 37%),\r\n        500: hsl(0, 90%, 57%),\r\n        400: hsl(240, 2%, 90%),\r\n        100: hsl(0, 0%, 98%)\r\n    )\r\n);\r\n\r\n    \r\n$clr-dark-blue: var(--clr-primary-800);\r\n$clr-grayish-dark-blue: var(--clr-primary-700);\r\n\r\n$clr-accent: var(--clr-primary-500);\r\n$clr-error: var(--clr-secondary-500);       // error\r\n$clr-light-gray: var(--clr-secondary-400);  // text field\r\n$clr-white: var(--clr-secondary-100);       // background color\r\n$clr-body: var(--clr-secondary-600);","@use \"../abstracts/\" as *;\r\n\r\n/* layout utilities */ \r\n.flex {\r\n    display: flex;\r\n    gap: var(--gap, 1rem);\r\n}\r\n\r\n.grid {\r\n    display: grid;\r\n    gap: var(--gap, 1rem);\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* text utilities */\r\n.text-center {\r\n    text-align: center;\r\n}\r\n\r\n.text-underline {\r\n    --underline-offset: 4px;\r\n    text-decoration: underline;\r\n    text-underline-offset: var(--underline-offset);\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* typography utilities */\r\n.body-2 {\r\n    font-size: $font-size-body2;\r\n}\r\n\r\n.fw-bold {\r\n    font-weight: $font-weight-bold;\r\n}","@use \"sizes\" as *;\r\n@use \"functions\" as *;\r\n\r\n// font families\r\n$font-family-heading: \"Ibarra\", \"serif\";\r\n$font-family-body:  \"PublicSans\", \"sans-serif\";\r\n\r\n// font weight\r\n$font-weight-regular: 400;\r\n$font-weight-bold: 700;\r\n\r\n// typography\r\n$type: (\r\n    typescale: (\r\n        small: (\r\n            600: rem(40),       // h1\r\n            500: rem(40),       // h2\r\n            400: rem(32),       // h3\r\n            300: rem(16),       // body 1\r\n            200: rem(15),       // body 2\r\n            100: rem(12)        // small\r\n        ),\r\n        large: (\r\n            600: rem(50)\r\n        )\r\n    )\r\n);\r\n\r\n// variables\r\n$font-size-600: var(--fs-600);\r\n$font-size-500: var(--fs-500);\r\n$font-size-400: var(--fs-400);\r\n$font-size-300: var(--fs-300);\r\n$font-size-200: var(--fs-200);\r\n$font-size-100: var(--fs-100);\r\n\r\n$font-size-h1: $font-size-600;\r\n$font-size-h2: $font-size-500;\r\n$font-size-h3: $font-size-400;\r\n$font-size-body1: $font-size-300;\r\n$font-size-body2: $font-size-200;\r\n$font-size-small: $font-size-100;\r\n","/* font face */\r\n\r\n/* Ibarra */\r\n@font-face {\r\n    font-family: \"Ibarra\";\r\n    src: url(\"/fonts/IbarraReal/IbarraRealNova-Regular.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 400;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Ibarra\";\r\n    src: url(\"/fonts/IbarraReal/IbarraRealNova-Bold.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 700;\r\n}\r\n\r\n\r\n/* Public Sans */\r\n@font-face {\r\n    font-family: \"PublicSans\";\r\n    src: url(\"/fonts/PublicSans/PublicSans-Regular.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 400;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"PublicSans\";\r\n    src: url(\"/fonts/PublicSans/PublicSans-Bold.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 700;\r\n}","@use \"../abstracts/\" as *;\r\n@use \"../utils\" as *;\r\n@use \"../base/font-face\" as *;\r\n\r\n\r\n/* global variables */\r\n:root {\r\n    @include convert_colors();\r\n    @include convert_typography();\r\n}\r\n","@use \"colors\"    as *;\r\n@use \"typography\" as *;\r\n@use \"functions\" as *;\r\n@use \"sizes\" as *;\r\n@use \"sass:math\";\r\n@use \"breakpoints\" as *;\r\n\r\n\r\n\r\n// Add min-width media query\r\n@mixin mq-min($breakpoint: 768) {\r\n    @media (min-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n@mixin mq-max($breakpoint: 768) {\r\n    @media (max-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n// Convert color map either into css custom properties\r\n@mixin convert_colors() {\r\n    $color-map: $colors;\r\n\r\n    @each $role, $shades in $color-map {\r\n\r\n        @each $lightness, $color in $shades {\r\n            --clr-#{$role}-#{$lightness}: #{$color};\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Convert map with typography related values either into css custom properties \r\n@mixin convert_typography() {\r\n    $typeography-map: $type;\r\n    \r\n    @each $key, $map in $typeography-map {\r\n        @if $key == \"typescale\" {\r\n            @each $screen-size, $typescale in $map {\r\n                \r\n                @if $screen-size == \"large\" {\r\n                    @include mq-min($large-screen-size) {\r\n                        @each $scale, $value in $typescale {\r\n                            --fs-#{$scale}: #{$value};\r\n                        }\r\n                    }\r\n\r\n                } @else {\r\n                    @each $scale, $value in $typescale {\r\n                        --fs-#{$scale}: #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Quick access to gap proprety for different situations\r\n@mixin flex($gap: 1rem) {\r\n    display: flex;\r\n\r\n    @if type-of($gap) == string{\r\n        @error \"Use unitless integer value or rem\";\r\n    }\r\n\r\n    @if math.is-unitless($gap) {\r\n        gap: rem($gap);\r\n    } @else {\r\n        gap: $gap;\r\n    }\r\n}\r\n\r\n\r\n@mixin grid($gap: 1rem) {\r\n    display: grid;\r\n    row-gap: $gap;\r\n}\r\n\r\n\r\n// Basic list \r\n@mixin list($row: \"false\", $item-gap: 1rem, $off-markers: \"false\") {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @if $row == \"true\" {\r\n        @include flex($item-gap);\r\n    } @else {\r\n        @include grid($item-gap);\r\n    }\r\n\r\n    @if $off-markers == \"true\" {\r\n        list-style-type: none;\r\n    }\r\n}\r\n\r\n\r\n@mixin heading($font-size, $font-weight, $color: black) {\r\n    font-size: $font-size; \r\n    font-weight: $font-weight;\r\n    color: $color;\r\n}\r\n\r\n\r\n// Set appearence to none for custom styling\r\n@mixin reset_appearence() {\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* general */\r\nbody {\r\n    font-family: $font-family-body;\r\n    background-color: $clr-white;\r\n    color: $clr-body;\r\n\r\n    overflow-x: hidden;\r\n}\r\n\r\n\r\n.border-block {\r\n    border-block: 1px solid $clr-light-gray;\r\n    padding-block: var(--padding-block, 2rem);\r\n    margin-block: 2rem;\r\n\r\n    @include grid(rem(24));\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* portfolio page related styling */\r\n.portfolio-main {\r\n    @include grid(rem(115));\r\n    \r\n    &__project-list {\r\n        @include list($row: \"false\", $item-gap: 1rem, $off-markers: \"true\");\r\n        \r\n        @include mq-min($medium-screen-size) {\r\n            grid-template-columns: rem(95) 1fr rem(95);\r\n        }\r\n\r\n        .border-block {\r\n            @include mq-min($medium-screen-size) {\r\n                --padding-block: #{rem(50)};\r\n            }\r\n        \r\n            @include mq-min($large-screen-size) {\r\n                --padding-block: #{rem(80)};\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.portfolio-project {\r\n    grid-column: 1 / -1;\r\n\r\n    /* move preview before text for every even element */\r\n    &:nth-child(even) {\r\n        .portfolio-project__project-preview {\r\n            order: 1;\r\n        }\r\n    }\r\n\r\n\r\n    &__project-preview {\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: rem(125);\r\n        align-items: center;\r\n    }\r\n\r\n    @include mq-min($large-screen-size) {\r\n        flex-direction: column;\r\n        grid-column: 1 / span 2;\r\n            \r\n        &:nth-child(even) {\r\n            grid-column: 2 / span 2;\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n.project-main {\r\n    --gap: #{rem(64)};\r\n    padding-top: clamp(rem(40), 5vw, rem(94));\r\n\r\n    @include mq-min($medium-screen-size) {\r\n    }\r\n}\r\n\r\n\r\n.about-project {\r\n    @include grid(rem(40));\r\n\r\n    > .grid {\r\n        --gap: #{rem(40)};\r\n    }\r\n\r\n\r\n    &__border-block {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(em(350), 1fr));\r\n        margin-block: 0;\r\n    }\r\n\r\n\r\n    &__tags {\r\n        --gap: #{rem(8)};\r\n    }\r\n\r\n\r\n    &__description {\r\n        grid-row: span 2;\r\n    }\r\n\r\n\r\n    &__background {\r\n        --gap: #{rem(28)};\r\n    }\r\n\r\n\r\n    &__static-previews {\r\n        --gap: #{rem(40)};\r\n    }\r\n\r\n\r\n    &__preview-list {\r\n        @include list($row: \"false\", $item-gap: 2rem, $off-markers: \"true\");\r\n    }\r\n\r\n\r\n    @include mq-min($large-screen-size) {\r\n        grid-template-columns: 1fr 2fr;\r\n        column-gap: rem(115);\r\n        align-items: start;\r\n    }\r\n}\r\n\r\n\r\n.switch-project {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n\r\n    // padding-top: clamp(rem(65), 10vw, rem(80));;\r\n\r\n    &__button {\r\n        background: none;\r\n        border: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &__section {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        gap: 1rem;\r\n        \r\n        padding-block: rem(24);\r\n        border-block: 1px solid $clr-light-gray;\r\n\r\n        &[data-switch-to=prev] {\r\n            border-right: 1px solid $clr-light-gray;\r\n        }\r\n        \r\n        &[data-switch-to=next] {\r\n            align-items: end;\r\n            text-align: right;\r\n        }\r\n    }\r\n\r\n    &__project-name::after {\r\n        content: attr(data-undertext);\r\n        display: block;\r\n        color: hsl(240, 3%, 60%);\r\n        font-family: $font-family-body;\r\n        font-size: $font-size-body1;\r\n    }\r\n\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        &__section {\r\n            flex-direction: row;\r\n\r\n            &[data-switch-to=next] {\r\n                align-items: center;\r\n                justify-content: end;\r\n\r\n                .switch-project__button {\r\n                    order: 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n\r\n/* buttons */\r\n$disabled-state-color: hsl(200, 11%, 84%);\r\n\r\n.button {\r\n    --_button-bg-color: var(--button-bg-color, #{$clr-dark-blue});\r\n    --_indicator-bg-color: var(--indicator-bg-color, hsl(205, 41%, 18%));\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    width: min(95%, rem(280));\r\n\r\n    padding: 0;\r\n    background-color: var(--button-bg-color, #{$clr-dark-blue});\r\n    color: $clr-white;\r\n    cursor: pointer;\r\n\r\n    border: 1px solid transparent;\r\n\r\n    letter-spacing: em(2);\r\n    text-transform: uppercase;\r\n    text-wrap: nowrap;\r\n\r\n\r\n    &--secondary {\r\n        justify-content: center;\r\n\r\n        padding: rem(18);\r\n\r\n        color: $clr-grayish-dark-blue;\r\n        background: none;\r\n        border: 1px solid currentColor;\r\n\r\n    \r\n        &:hover:not(:disabled),\r\n        &:focus-visible:not(:disabled) {\r\n            background-color: $clr-dark-blue;\r\n            color: $clr-white;\r\n            border-color: transparent;\r\n        }\r\n\r\n        &:disabled {\r\n            color: $disabled-state-color;\r\n        }\r\n    }\r\n\r\n\r\n    &:hover,\r\n    &:focus-visible {\r\n        --button-bg-color: #{$clr-accent};\r\n        --indicator-bg-color: hsl(167, 36%, 49%);\r\n    }\r\n\r\n\r\n    &:focus-visible {\r\n        outline: 3px solid $clr-accent;\r\n    }\r\n\r\n\r\n    &:disabled {\r\n        --button-bg-color: #{$disabled-state-color};\r\n        --indicator-bg-color: #{darken($disabled-state-color, 4%)};\r\n    }\r\n    \r\n\r\n    /* make hover icon white if button is hovered or disabled */\r\n    &:where(:hover, :focus-visible, :disabled) {\r\n        .button__hover-icon {\r\n            filter: brightness(100);\r\n        }\r\n    }\r\n\r\n    \r\n    &__hover-indicator {\r\n        background-color: var(--_indicator-bg-color);\r\n        padding: rem(18);\r\n    }\r\n\r\n\r\n    &__text {\r\n        flex: 1;\r\n    }\r\n}\r\n\r\n.hamburger-menu {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    display: none;\r\n}","@use \"../abstracts/\" as *;\r\n\r\n\r\n.form {\r\n    /* add message benith invalid text fields inside a form */\r\n    label:has([data-invalid])::after {\r\n        content: \"invalid\";\r\n        font-style: italic;\r\n        color: $clr-error;\r\n    }   \r\n}\r\n\r\n\r\n/* label-input pair */\r\n.input-pair {\r\n    @include grid(rem(8));\r\n    width: 30%;\r\n    font-weight: $font-weight-bold;\r\n}\r\n\r\n\r\n.input-field {\r\n    background-color: $clr-light-gray;\r\n    color: $clr-grayish-dark-blue;\r\n\r\n    padding: 1rem;\r\n    border: none;\r\n\r\n    font-weight: $font-weight-regular;\r\n\r\n    &::placeholder {\r\n        color: hsl(240, 3%, 64%);\r\n    }\r\n\r\n    &:focus {\r\n        outline: 2px solid $clr-accent;\r\n    }\r\n\r\n    &[data-invalid] {\r\n        outline: 2px solid $clr-error;\r\n    }\r\n}\r\n\r\n\r\n.text-area {\r\n    &__input {\r\n        resize: none;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* lists */","@use \"../abstracts/\" as *;\r\n\r\n/* navigations  */\r\n.nav-list {\r\n    @include list($row: \"true\", $item-gap: rem(42), $off-markers: \"true\");\r\n\r\n    letter-spacing: rem(2);\r\n\r\n    &__link:hover,\r\n    &__link:focus {\r\n        color: $clr-accent;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* headings */\r\n\r\n%heading-font {\r\n    font-family: $font-family-heading;\r\n}\r\n\r\nh1 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h1, $font-weight-bold,$clr-grayish-dark-blue);\r\n}\r\n\r\nh2 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h2, $font-weight-bold,$clr-grayish-dark-blue);\r\n}\r\n\r\nh3 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h3, $font-weight-regular,$clr-grayish-dark-blue);\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* HEADER */\r\n.primary-header {\r\n\r\n    position: relative;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding-block: 2rem;\r\n\r\n\r\n\r\n    @include mq-max($small-screen-size) {\r\n        .primary-nav {\r\n            visibility: hidden;\r\n            position: absolute; \r\n            bottom: -100%;\r\n            transform: translateY(100%);\r\n\r\n            text-align: center;\r\n            padding: rem(40) rem(80);\r\n            right: 0;\r\n            \r\n            color: $clr-white;\r\n            background-color: $clr-grayish-dark-blue;\r\n            @include grid(rem(32));\r\n        }\r\n        \r\n        .hamburger-menu {\r\n            display: block;\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* FOOTER */\r\n.footer {\r\n    padding: rem(56);\r\n    background-color: $clr-grayish-dark-blue;\r\n    color: $clr-white;\r\n    &__content {\r\n        @include grid(rem(40));\r\n        justify-items: center;\r\n    }\r\n\r\n    \r\n    img {\r\n        filter: brightness(100);\r\n    }\r\n\r\n    &__nav-item-group {\r\n        @include list($row:\"false\", $item-gap: 1rem, $off-markers: \"true\");\r\n        gap: rem(40);\r\n    }\r\n\r\n    &__nav-list {\r\n        text-align: center;\r\n        flex-direction: column;\r\n    }\r\n\r\n    &__contact-platforms {\r\n        @include list($row:\"true\", $item-gap: rem(15), $off-markers: \"true\");\r\n        align-items: center;\r\n    }\r\n\r\n\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        &__content {\r\n            grid-template-columns: auto 1fr;\r\n            align-items: center;\r\n            column-gap: rem(40);\r\n        }\r\n\r\n\r\n        &__navigation {\r\n            width: 100%;\r\n        }\r\n\r\n\r\n        &__nav-item-group {\r\n            display: flex;\r\n            justify-content: space-between;\r\n        }\r\n\r\n\r\n        &__nav-list {\r\n            flex-direction: row;\r\n        }\r\n    }\r\n\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* MAIN */\r\n.home-main {\r\n    @include grid(rem(115));\r\n    &__profile-picture {\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        &__about-me {\r\n            display: grid;\r\n            grid-template-columns: 1fr minmax(350px, 40%);\r\n            column-gap: rem(94);\r\n            align-items: center;\r\n        }\r\n\r\n\r\n        &__profile-picture img{\r\n            height: 80vh;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.hero {\r\n    @include grid(rem(24));\r\n    grid-template-columns: 1fr;\r\n    grid-template-areas: \r\n    \"hero\"\r\n    \"main\";\r\n\r\n\r\n    &__picture {\r\n        grid-area: hero; \r\n    }\r\n\r\n    &__main {\r\n\r\n        --_hero-main-padding: 1.5rem;\r\n\r\n        @include grid(2rem);\r\n        text-wrap: balance;\r\n        background-color: $clr-white;\r\n        grid-area: main;\r\n\r\n        padding: var(--_hero-main-padding) var(--_hero-main-padding) 0 0;\r\n\r\n        \r\n    }\r\n\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        grid-template-columns: minmax(100px, 1fr) 20rem 1fr;\r\n\r\n        grid-template-areas: \r\n        \"hero hero hero\"\r\n        \"main main hero-3\";\r\n\r\n        &__picture {\r\n            grid-row: hero / hero-3;\r\n        }\r\n    }\r\n\r\n\r\n    @include mq-min($large-screen-size) {\r\n        grid-template-columns: 25rem 2fr 2fr;\r\n        grid-template-areas:\r\n        \"hero hero hero\"\r\n        \"main hero-3 hero-3\";\r\n    }\r\n}\r\n\r\n\r\n.contact-author {\r\n    @include grid(rem(40));\r\n    text-align: center;\r\n    justify-items: center;\r\n    padding-block: rem(115);\r\n\r\n\r\n    &__leading-line {\r\n        display: none;\r\n\r\n        width: 100%;\r\n        height: 2px;\r\n        background-color: $clr-light-gray;\r\n    }\r\n\r\n\r\n    &__cta-lead {\r\n        @include heading($font-size-500, $font-weight-bold);\r\n    }\r\n\r\n\r\n    @include mq-min($medium-screen-size) {\r\n        grid-template-columns: rem(430) 1fr 1fr;\r\n        column-gap: 1rem;\r\n        align-items: center;\r\n\r\n        &__leading-line {\r\n            display: inline-block;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}