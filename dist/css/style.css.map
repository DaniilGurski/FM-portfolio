{"version":3,"sourceRoot":"","sources":["base/_reset.scss","utils/_container.scss","utils/_appearence.scss","utils/_color-utils.scss","abstracts/_colors.scss","utils/_layout-utils.scss","base/_font-face.scss","base/_root.scss","abstracts/_mixins.scss","base/_general.scss","abstracts/_typography.scss","components/_buttons.scss","components/_form.scss","components/_list.scss","components/_nav.scss","components/_headings.scss","layout/_header.scss","layout/_footer.scss","layout/_main.scss"],"names":[],"mappings":"AAEA;AACA;AAAA;AAAA;EAGE;;;AAGF;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAOE;;;AAIF;AACA;AAAA;EAEE;;;AAIF;AACA;EACI;;AAEA;EACI;;;AAKR;AACA;EACE;EACA;;;AAIF;AACA;EACE;EACA;;;AAIF;AACA;AAAA;EAEE;EACA;;;AAIF;AACA;AAAA;AAAA;AAAA;EAIE;;;AAIF;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;EAMI;;;AAIJ;AACA;EACE;;;AC/EF;AAQA;EACI;EACA,gBARuB;EASvB;;;AAIJ;EACI;EACA,uBACA;;AAOA;EACI;;;AAKR;EACI;;;AAIJ;EACI;;;ACvCJ;AACA;EACI;;;AAIJ;EACI;;;AAIJ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;ACjBJ;AACA;EACI,OCaS;;;ADVb;EACI,OCWQ;;;ACjBZ;AACA;EACI;EACA;;;AAGJ;EACI;EACA;;;ACVJ;AAEA;AACA;EACI;EACA;EAEA;;AAGJ;EACI;EACA;EAEA;;AAIJ;AACA;EACI;EACA;EAEA;;AAGJ;EACI;EACA;EAEA;;ACzBJ;AACA;ECuBY;EAAA;EAAA;EAAA;EAAA;EAAA;EAuBY;EAAA;EAAA;EAAA;EAAA;EAAA;;AA3CpB;EDHJ;ICwC4B;;;;AC5C5B;AACA;EACI,aCCgB;EDAhB,kBLgBQ;EKfR,OLUoB;EKRpB;;;AAIJ;EACI;EACA;EACA;ED+DA;EACA,SC9Dc;;;AEdlB;AAGA;EACI;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA,OPKQ;EOJR;EAEA;EAEA;EACA;EACA;AA0CA;;AAvCA;EACI;EAEA;EAEA;EACA;EACA;;AAGA;EACI,kBPtBI;EOuBJ,OPjBA;EOkBA;;AAGJ;EACI,OAvCW;;AA4CnB;EACI;EACA;;AAIJ;EACI;;AAIJ;EACI;EACA;;AAMA;EACI;;AAKR;EACI;EACA;;AAIJ;EACI;;;AAIR;EACI;EACA;EACA;EAEA;;;ACtFJ;AACI;;AACA;EACI;EACA;EACA,ORWI;;;AQNZ;AACA;EJgEI;EACA,SIhEc;EACd;EACA,aFRe;;;AEYnB;EACI,kBRFa;EQGb,ORPoB;EQSpB;EACA;EAEA,aFpBkB;;AEsBlB;EACI;;AAGJ;EACI;;AAGJ;EACI;;;AAMJ;EACI;;;AC5CR;ACAA;AACA;ENkFI;EACA;EAvBA;EASI,KMpEmC;EN2FnC;EMzFJ;;AAEA;EAEI,OVOK;;;AWfb;AAEA;EACI,aLDkB;;;AKItB;EP6FI,WExEY;EFyEZ,aE7Fe;;;AKInB;EPwFI,WEvEY;EFwEZ,aE7Fe;;;AKSnB;EPmFI,WEtEY;EFuEZ,aE9FkB;;;AMNtB;AAEI;EACI;EAEA;EACA;EACA;EACA;;ARMJ;EQDI;IACI;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA,OZJA;IYKA,kBZVY;II8DpB;IACA,SQpDsB;;EAGlB;IACI;;;;AC7BZ;AACA;ET2EI;EACA,SS3Ec;EACd;EAEA,kBbSoB;EaRpB,ObaQ;EaZR;EACA;;AAIA;EACI;;AAGJ;ETmEA;EACA;EARA;EACA,SS5D2C;ET4EvC;ES3EA;;AAGJ;EACI;EACA;;AAGJ;ETyDA;EACA;EAvBA;EASI,KS3CsC;ETkEtC;ESjEA;;;AC5BR;AACA;EV2EI;EACA,SU3Ec;;AAEV;EACI;;;AAMZ;EViEI;EACA,SUjEc;;AAEd;EV8DA;EACA,SU9DkB;EACd,kBdGI;;;AcEZ;EVuDI;EACA,SUvDc;EACd;EACA;;AAGA;EACI;;AAIJ;EVmEA,WEvEY;EFwEZ,aE7Fe","file":"style.css","sourcesContent":["// Based on https://piccalil.li/blog/a-modern-css-reset\r\n\r\n/* box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure {\r\n  margin: 0;\r\n}\r\n\r\n\r\n/* remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul[role='list'],\r\nol[role='list'] {\r\n  list-style: none;\r\n}\r\n\r\n\r\n/* set core root defaults */\r\nhtml {\r\n    height: 100%;\r\n\r\n    &:focus-visible {\r\n        scroll-behavior: smooth;\r\n    }\r\n}\r\n\r\n\r\n/* set core body defaults */\r\nbody {\r\n  height: 100%;\r\n  text-rendering: optimizeSpeed;\r\n}\r\n\r\n\r\n/* reset default link styles */\r\na {\r\n  text-decoration: auto;\r\n  color: inherit;\r\n}\r\n\r\n\r\n/* make images easier to work with  */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n\r\n/* inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n\r\n/* remove default heading styles */\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font: inherit;\r\n}\r\n\r\n\r\n/* larger line height for paragraphs */\r\np {\r\n  line-height: 1.5;\r\n}","@use \"../abstracts/\" as *;\r\n@use \"sass:math\";\r\n\r\n/* container */\r\n$container-max-width: 100ch;\r\n$container-padding-inline: 2rem;\r\n\r\n$breakout-max-width: 120ch;\r\n$breakout-size: math.div(($breakout-max-width - $container-max-width), 2);\r\n\r\n\r\n.container {\r\n    width: min(90%, $container-max-width);\r\n    padding-inline: $container-padding-inline;\r\n    margin-inline: auto;\r\n}\r\n\r\n\r\n.container-grid {\r\n    display: grid;\r\n    grid-template-columns: \r\n    [full-width-start] minmax($container-padding-inline, 1fr)\r\n    [breakout-start]   minmax(0, $breakout-size) \r\n    [content-start]    min(100% - ($container-padding-inline * 2), $container-max-width) \r\n    [content-end]      minmax(0, $breakout-size) \r\n    [breakout-end]     minmax($container-padding-inline, 1fr)\r\n    [full-width-end];\r\n \r\n    > * {\r\n        grid-column: content;\r\n    }\r\n}\r\n\r\n\r\n.full-width {\r\n    grid-column: full-width;\r\n}\r\n\r\n\r\n.breakout {\r\n    grid-column: breakout;\r\n}\r\n\r\n","\r\n/* appearence utilities */\r\n.none {\r\n    display: none;\r\n}\r\n\r\n\r\n.hidden {\r\n    visibility: hidden;\r\n}\r\n\r\n\r\n.visually-hidden {\r\n    clip: rect(0 0 0 0);\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* color utilities */\r\n.clr-accent {\r\n    color: $clr-accent;\r\n}\r\n\r\n.clr-error {\r\n    color: $clr-error;\r\n}","$colors: (\r\n    primary: (\r\n        800: hsl(205, 41%, 21%),\r\n        700: hsl(245, 10%, 22%),\r\n        500: hsl(167, 36%, 54%)\r\n    ),\r\n\r\n    secondary: (\r\n        500: hsl(0, 90%, 57%),\r\n        400: hsl(240, 2%, 90%),\r\n        100: hsl(0, 0%, 98%)\r\n    )\r\n);\r\n\r\n    \r\n$clr-dark-blue: var(--clr-primary-800);\r\n$clr-grayish-dark-blue: var(--clr-primary-700);\r\n$clr-accent: var(--clr-primary-500);\r\n\r\n$clr-error: var(--clr-secondary-500);       // error\r\n$clr-light-gray: var(--clr-secondary-400);  // text field\r\n$clr-white: var(--clr-secondary-100);       // background color","@use \"../abstracts/\" as *;\r\n\r\n/* layout utilities */ \r\n.flex {\r\n    display: flex;\r\n    gap: var(--gap, 1rem);\r\n}\r\n\r\n.grid {\r\n    display: grid;\r\n    gap: var(--gap, 1rem);\r\n}","/* font face */\r\n\r\n/* Ibarra */\r\n@font-face {\r\n    font-family: \"Ibarra\";\r\n    src: url(\"/fonts/IbarraReal/IbarraRealNova-Regular.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 400;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Ibarra\";\r\n    src: url(\"/fonts/IbarraReal/IbarraRealNova-Bold.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 700;\r\n}\r\n\r\n\r\n/* Public Sans */\r\n@font-face {\r\n    font-family: \"PublicSans\";\r\n    src: url(\"/fonts/PublicSans/PublicSans-Regular.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 400;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"PublicSans\";\r\n    src: url(\"/fonts/PublicSans/PublicSans-Bold.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 700;\r\n}","@use \"../abstracts/\" as *;\r\n@use \"../utils\" as *;\r\n@use \"../base/font-face\" as *;\r\n\r\n\r\n/* global variables */\r\n:root {\r\n    @include convert_colors();\r\n    @include convert_typography();\r\n}\r\n","@use \"colors\"    as *;\r\n@use \"typography\" as *;\r\n@use \"functions\" as *;\r\n@use \"sizes\" as *;\r\n@use \"sass:math\";\r\n\r\n\r\n// Add min-width media query\r\n@mixin mq-min($breakpoint: 768) {\r\n    @media (min-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n@mixin mq-max($breakpoint: 768) {\r\n    @media (max-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n// Convert color map either into css custom properties\r\n@mixin convert_colors() {\r\n    $color-map: $colors;\r\n\r\n    @each $role, $shades in $color-map {\r\n\r\n        @each $lightness, $color in $shades {\r\n            --clr-#{$role}-#{$lightness}: #{$color};\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Convert map with typography related values either into css custom properties \r\n@mixin convert_typography() {\r\n    $typeography-map: $type;\r\n    \r\n    @each $key, $map in $typeography-map {\r\n        @if $key == \"typescale\" {\r\n            @each $screen-size, $typescale in $map {\r\n                \r\n                @if $screen-size == \"large\" {\r\n                    @include mq-min($breakpoint: 0) {\r\n                        @each $scale, $value in $typescale {\r\n                            --fs-#{$scale}: #{$value};\r\n                        }\r\n                    }\r\n\r\n                } @else {\r\n                    @each $scale, $value in $typescale {\r\n                        --fs-#{$scale}: #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Quick access to gap proprety for different situations\r\n@mixin flex($gap: 1rem) {\r\n    display: flex;\r\n\r\n    @if type-of($gap) == string{\r\n        @error \"Use unitless integer value or rem\";\r\n    }\r\n\r\n    @if math.is-unitless($gap) {\r\n        gap: rem($gap);\r\n    } @else {\r\n        gap: $gap;\r\n    }\r\n}\r\n\r\n\r\n@mixin grid($gap: 1rem) {\r\n    display: grid;\r\n    row-gap: $gap;\r\n}\r\n\r\n\r\n// Basic list \r\n@mixin list($row: \"false\", $item-gap: 1rem, $off-markers: \"false\") {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @if $row == \"true\" {\r\n        @include flex($item-gap);\r\n    } @else {\r\n        @include grid($item-gap);\r\n    }\r\n\r\n    @if $off-markers == \"true\" {\r\n        list-style-type: none;\r\n    }\r\n}\r\n\r\n\r\n@mixin heading($font-size, $font-weight) {\r\n    font-size: $font-size; \r\n    font-weight: $font-weight;\r\n}\r\n\r\n\r\n// Set appearence to none for custom styling\r\n@mixin reset_appearence() {\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* general */\r\nbody {\r\n    font-family: $font-family-body;\r\n    background-color: $clr-white;\r\n    color: $clr-grayish-dark-blue;\r\n\r\n    overflow-x: hidden;\r\n}\r\n\r\n\r\n.border-block {\r\n    border-block: 1px solid $clr-light-gray;\r\n    padding-block: 2rem;\r\n    margin-block: 2rem;\r\n\r\n    @include grid(rem(24));\r\n}","@use \"sizes\" as *;\r\n@use \"functions\" as *;\r\n\r\n// font families\r\n$font-family-heading: \"Ibarra\", \"serif\";\r\n$font-family-body:  \"PublicSans\", \"sans-serif\";\r\n\r\n// font weight\r\n$font-weight-regular: 400;\r\n$font-weight-bold: 700;\r\n\r\n// typography\r\n$type: (\r\n    typescale: (\r\n        small: (\r\n            600: rem(40),       // h1\r\n            500: rem(40),       // h2\r\n            400: rem(32),       // h3\r\n            300: rem(16),       // body 1\r\n            200: rem(15),       // body 2\r\n            100: rem(12)        // small\r\n        ),\r\n        large: (\r\n            600: rem(50)\r\n        )\r\n    )\r\n);\r\n\r\n// variables\r\n$font-size-600: var(--fs-600);\r\n$font-size-500: var(--fs-500);\r\n$font-size-400: var(--fs-400);\r\n$font-size-300: var(--fs-300);\r\n$font-size-200: var(--fs-200);\r\n$font-size-100: var(--fs-100);\r\n\r\n$font-size-h1: $font-size-600;\r\n$font-size-h2: $font-size-500;\r\n$font-size-h3: $font-size-400;\r\n$font-size-body1: $font-size-300;\r\n$font-size-body2: $font-size-200;\r\n$font-size-small: $font-size-100;\r\n","@use \"../abstracts/\" as *;\r\n\r\n\r\n/* buttons */\r\n$disabled-state-color: hsl(200, 11%, 84%);\r\n\r\n.button {\r\n    --_button-bg-color: var(--button-bg-color, #{$clr-dark-blue});\r\n    --_indicator-bg-color: var(--indicator-bg-color, hsl(205, 41%, 18%));\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    width: min(80%, rem(280));\r\n\r\n    padding: 0;\r\n    background-color: var(--button-bg-color, #{$clr-dark-blue});\r\n    color: $clr-white;\r\n    cursor: pointer;\r\n\r\n    border: 1px solid transparent;\r\n\r\n    letter-spacing: em(2);\r\n    text-transform: uppercase;\r\n    text-wrap: nowrap;\r\n\r\n\r\n    &--secondary {\r\n        justify-content: center;\r\n\r\n        padding: rem(18);\r\n\r\n        color: currentColor;\r\n        background: none;\r\n        border: 1px solid currentColor;\r\n\r\n    \r\n        &:hover:not(:disabled) {\r\n            background-color: $clr-dark-blue;\r\n            color: $clr-white;\r\n            border-color: transparent;\r\n        }\r\n\r\n        &:disabled {\r\n            color: $disabled-state-color;\r\n        }\r\n    }\r\n\r\n\r\n    &:hover {\r\n        --button-bg-color: #{$clr-accent};\r\n        --indicator-bg-color: hsl(167, 36%, 49%);\r\n    }\r\n\r\n\r\n    &:focus-visible {\r\n        outline: 3px solid $clr-accent;\r\n    }\r\n\r\n\r\n    &:disabled {\r\n        --button-bg-color: #{$disabled-state-color};\r\n        --indicator-bg-color: #{darken($disabled-state-color, 4%)};\r\n    }\r\n    \r\n\r\n    /* make hover icon white if button is hovered or disabled */\r\n    &:hover, &:disabled {\r\n        .button__hover-icon {\r\n            filter: brightness(100);\r\n        }\r\n    }\r\n\r\n    \r\n    &__hover-indicator {\r\n        background-color: var(--_indicator-bg-color);\r\n        padding: rem(18);\r\n    }\r\n\r\n\r\n    &__text {\r\n        flex: 1;\r\n    }\r\n}\r\n\r\n.hamburger-menu {\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    display: none;\r\n}","@use \"../abstracts/\" as *;\r\n\r\n\r\n.form {\r\n    /* add message benith invalid text fields inside a form */\r\n    label:has([data-invalid])::after {\r\n        content: \"invalid\";\r\n        font-style: italic;\r\n        color: $clr-error;\r\n    }   \r\n}\r\n\r\n\r\n/* label-input pair */\r\n.input-pair {\r\n    @include grid(rem(8));\r\n    width: 30%;\r\n    font-weight: $font-weight-bold;\r\n}\r\n\r\n\r\n.input-field {\r\n    background-color: $clr-light-gray;\r\n    color: $clr-grayish-dark-blue;\r\n\r\n    padding: 1rem;\r\n    border: none;\r\n\r\n    font-weight: $font-weight-regular;\r\n\r\n    &::placeholder {\r\n        color: hsl(240, 3%, 64%);\r\n    }\r\n\r\n    &:focus {\r\n        outline: 2px solid $clr-accent;\r\n    }\r\n\r\n    &[data-invalid] {\r\n        outline: 2px solid $clr-error;\r\n    }\r\n}\r\n\r\n\r\n.text-area {\r\n    &__input {\r\n        resize: none;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* lists */","@use \"../abstracts/\" as *;\r\n\r\n/* navigations  */\r\n.nav-list {\r\n    @include list($row: \"true\", $item-gap: rem(42), $off-markers: \"true\");\r\n\r\n    letter-spacing: rem(2);\r\n\r\n    &__link:hover,\r\n    &__link:focus {\r\n        color: $clr-accent;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* headings */\r\n\r\n%heading-font {\r\n    font-family: $font-family-heading;\r\n}\r\n\r\nh1 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h1, $font-weight-bold);\r\n}\r\n\r\nh2 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h2, $font-weight-bold);\r\n}\r\n\r\nh3 {\r\n    @extend %heading-font;\r\n    @include heading($font-size-h3, $font-weight-regular);\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* HEADER */\r\n.primary-header {\r\n    &__content {\r\n        position: relative;\r\n    \r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding-block: 2rem;\r\n    }\r\n\r\n\r\n    @include mq-max($small-screen-size) {\r\n        .primary-nav {\r\n            visibility: hidden;\r\n            position: absolute; \r\n            bottom: -100%;\r\n            transform: translateY(100%);\r\n\r\n            text-align: center;\r\n            padding: rem(40) rem(80);\r\n            right: 0;\r\n            \r\n            color: $clr-white;\r\n            background-color: $clr-grayish-dark-blue;\r\n            @include grid(rem(32));\r\n        }\r\n        \r\n        .hamburger-menu {\r\n            display: block;\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* FOOTER */\r\n.footer {\r\n    @include grid(rem(40));\r\n    justify-items: center;\r\n\r\n    background-color: $clr-grayish-dark-blue;\r\n    color: $clr-white;\r\n    padding: rem(56);\r\n    margin-top: rem(115);\r\n\r\n    // margin-inline: calc(50% - 50vw);\r\n\r\n    img {\r\n        filter: brightness(100);\r\n    }\r\n\r\n    &__nav-item-group {\r\n        @include list($row:\"false\", $item-gap: 1rem, $off-markers: \"true\");\r\n        gap: rem(40);\r\n    }\r\n\r\n    &__nav-list {\r\n        text-align: center;\r\n        flex-direction: column;\r\n    }\r\n\r\n    &__contact-platforms {\r\n        @include list($row:\"true\", $item-gap: rem(15), $off-markers: \"true\");\r\n        align-items: center;\r\n    }\r\n\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* MAIN */\r\n.main {\r\n    @include grid(rem(115));\r\n    &__profile-picture {\r\n        img {\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.hero {\r\n    @include grid(rem(24));\r\n\r\n    &__main {\r\n        @include grid(2rem);\r\n        background-color: $clr-white;\r\n    }\r\n}\r\n\r\n\r\n.contact-author {\r\n    @include grid(rem(40));\r\n    text-align: center;\r\n    justify-items: center;\r\n\r\n\r\n    &__leading-line {\r\n        display: none;\r\n    }\r\n\r\n\r\n    &__cta-lead {\r\n        @include heading($font-size-500, $font-weight-bold);\r\n    }\r\n}\r\n\r\n\r\n"]}